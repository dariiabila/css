/* Root селектор — це селектор, який вибирає абстрактний
кореневий тег, в якому знаходиться вже інший HTML код */
/* 
:root {
  background-color: rgb(219, 197, 219);
}
html {
  max-width: 720px;

  background-color: aquamarine;
}

body {
  background: #fff;
} */

/* Глобальний селектор — це селектор, який вибирає всі теги
на сторінці. */

/* * {
  color: red;
} */

/* Селектор тегу — це селектор, який надає стилі для певного тегу,
який використовується у будь-якому місці HTML документа */

/* h1 {
  color: green;
} */

/* Селектор класу — це селектор, який надає стилі для всіх тегів,
які мають певний клас, який був вказаний у селекторі

Селектор класу починається з крапки (".") і за ним слідує ім'я */

/* .box {
  background-color: rgb(255, 255, 255);
} */

/* Селектор ідентифікатора — це селектор, який надає стилі для
всіх тегів, які мають певний ідентифікатор, який був вказаний у
селекторі

Селектор класу починається з решітки ("#") і за ним слідує ім'я

В HTML для встановлення ідентифікатора потрібно вказати
атрибут id */

/* #user {
  background-color: rgb(255, 255, 255);
} */

/* У CSS є можливість використовувати декілька селекторів, до
яких треба надати певний набір CSS властивостей

Для цього слід вказати селектори через кому (“,”) */

/* h1,
h2,
button.button#button {
  color: rgb(0, 217, 25);
}

#user,
.user {
  color: blue;
} */

/* Дочірній селектор — це селектор, який надає стилі для всіх
тегів, які є дочірніми тегами головного тегу

Для цього слід вказати знак більше (“>”), щоб показати
відношення між батьківським та дочірнім тегом */

/* .box > p {
  color: rgb(197, 140, 240);
}

footer > .user {
  color: rgb(89, 20, 20);
} */

/* Селектор нащадка — це селектор, який надає стилі для всіх
тегів, які є нащадками головного тегу

Для цього вкажіть у селекторі через пробіл розташування тегу,
або ви можете вказати два рази знак більше (“>>”) */

/* footer em {
  color: rgb(217, 177, 0);
} */

/* Сестринський селектор — це селектор, який надає стилі
для сестринського тегу, який йде одразу після основного тегу

Для цього слід вказати плюс (“+”), щоб показати
відношення між основним тегом та сестринським тегом */

/* h1 + p {
  background: black;
} */

/* Сусідський селектор — це селектор, який надає стилі
для всіх сусідніх тегів, які йдуть після основного тегу

Для цього слід вказати тильду (“~”), щоб показати
відношення між основним тегом та сусідніми тегами */

/* h1 ~ em {
  color: coral;
} */

/* {{!-- =========== Lesson 2 ============== --}} */

.card {
  background: #ededed;
}

.item {
  color: green;
}

/* Селектор першої дитини — це селектор, який вибирає перший
тег, якщо він є першою дитиною всередині батьківського тегу */

.item:first-child {
  color: blue;
}

/* Селектор останньої дитини — це селектор, який вибирає останній
тег, якщо він є останньою дитиною всередині батьківського тегу 
:last-child */

/* Селектор одиничної дитини — це селектор, який вибирає тег,
якщо він є єдиною дитиною всередині батьківського тегу, і після
нього більше не існує інших дитячих тегів :only-child */

/* Селектор першого типу — це селектор, який вибирає перший
елемент по заданому тегу серед своїх сусідських тегів
:first-of-type */

/* Селектор останнього типу — це селектор, який вибирає останній
елемент по заданому тегу серед своїх сусідських тегів
:last-of-type */

/* Селектор одиничного типу — це селектор, який вибирає елемент
по заданому тегу, якщо він є єдиним таким тегом серед сусідів
:only-of-type */

/* Селектор порядкової дитини — це селектор, який обирає
елементи на основі їхньої позиції в батьківському елементі

Для цього треба вказати індекс ( ) серед його братів і сестер. 
:nth-child( ) n */

.item:nth-child(2) {
  color: darkmagenta;
}

/* Що можна вписувати в index ( ) n

@ числа (1, 2, 3) — обирають елементи,
які є першим, другим, третім тощо

@ even — обирає парні елементи

@ odd — обирає непарні елементи

@ формули (3 +1) — обирає елементи по формулі,
в якій — змінна з порядковим номером елемента */

/* Селектор зворотної порядкової дитини — це селектор, який
обирає елементи на основі їхньої позиції в батьківському
елементі, але підрахунок веде з кінця

Для цього треба вказати індекс ( ) серед його братів і сестер. 
:nth-last-child( ) n */

/* Селектор порядкового типу — це селектор, який обирає
елементи на основі їхньої позиції в батьківському елементі та
типу тегу по аналогії як інші селектори типу

Для цього треба вказати індекс ( ) серед його братів і сестер,
які мають спільний тип тегу
:nth-of-type( ) n */

.item:nth-of-type(3n) {
  color: red;
}

/* Селектор невідповідності — це селектор, який обирає
елементи, які не відповідають вказаним селекторам

Для цього треба вказати в ( ) ті селектори,
які не повинні відповідати до елемента
:not( ) s */

/* Селектор пустого контенту — це селектор, який обирає
елементи, які не мають всередині контенту чи тегів
:empty */
